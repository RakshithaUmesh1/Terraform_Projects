pipeline {
    agent any
        environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }
    parameters {
        choice(
            name: 'terraformAction',
            choices: ['apply', 'destroy'],
            description: 'Choose your Terraform action to perform'
        )
    }

    stages {
        stage("Checkout") {
            steps {
                dir("EC2-Instance") {
                    git branch: 'main',
                        url: 'https://github.com/RakshithaUmesh1/Terraform_Projects.git'
                }
            }
        }

        stage("Terraform Init and Validate") {
            steps {
                dir("EC2-Instance/EC2-Instance") {
                    sh 'terraform init'
                    sh 'terraform validate'
                }
            }
        }

        stage("Terraform Plan") {
            steps {
                dir("EC2-Instance/EC2-Instance") {
                    sh 'terraform plan'
                }
            }
        }

        stage('Apply or Destroy') {
            when {
                expression {
                    return params.terraformAction == 'apply' || params.terraformAction == 'destroy'
                }
            }
            steps {
                dir('terraform/VPC') {
                    script {
                        if (params.terraformAction == 'apply') {
                            sh 'terraform apply -auto-approve'
                        } else if (params.terraformAction == 'destroy') {
                            sh 'terraform destroy -auto-approve'
                        }
                }
             }
          }
        }
    }
}
